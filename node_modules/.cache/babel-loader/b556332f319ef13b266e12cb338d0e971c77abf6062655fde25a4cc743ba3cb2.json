{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nexport const fetchSingleProduct = createAsyncThunk('product/fetchSingleProduct', async (id, _ref) => {\n  let {\n    rejectWithValue\n  } = _ref;\n  try {\n    const resp = await fetch(`http://localhost:3333/products/${id}`);\n    if (!resp.ok) {\n      throw new Error('Server problem');\n    }\n    const product = await resp.json();\n    return product[0];\n  } catch (error) {\n    rejectWithValue(error.message);\n  }\n});\nexport const singleProductSlice = createSlice({\n  name: 'item',\n  initialState: {\n    item: {}\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchSingleProduct.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchSingleProduct.fulfilled, (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      state.item = payload;\n      state.status = 'resolve';\n    }).addCase(fetchSingleProduct.rejected, (state, _ref3) => {\n      let {\n        payload\n      } = _ref3;\n      state.status = 'rejected';\n      state.error = payload;\n    });\n  }\n});\nexport default singleProductSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","fetchSingleProduct","id","_ref","rejectWithValue","resp","fetch","ok","Error","product","json","error","message","singleProductSlice","name","initialState","item","reducers","extraReducers","builder","addCase","pending","state","status","fulfilled","_ref2","payload","rejected","_ref3","reducer"],"sources":["/Users/user/Documents/garden-store/src/store/slices/singleProductSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\nexport const fetchSingleProduct = createAsyncThunk(\n    'product/fetchSingleProduct',\n    async (id, { rejectWithValue }) => {\n        try {\n            const resp = await fetch(`http://localhost:3333/products/${id}`)\n            if (!resp.ok) {\n                throw new Error('Server problem')\n            }\n            const product = await resp.json()\n            return product[0]\n        } catch (error) {\n            rejectWithValue(error.message)\n        }\n\n    }\n)\nexport const singleProductSlice = createSlice({\n    name: 'item',\n    initialState: {\n        item: {}\n    },\n    reducers: {},\n    extraReducers: (builder) => {\n        builder\n            .addCase(fetchSingleProduct.pending, (state) => {\n                state.status = 'loading'\n            })\n            .addCase(fetchSingleProduct.fulfilled, (state, { payload }) => {\n                state.item = payload\n                state.status = 'resolve'\n            })\n            .addCase(fetchSingleProduct.rejected, (state, { payload }) => {\n                state.status = 'rejected'\n                state.error = payload\n            })\n    }\n})\n\nexport default singleProductSlice.reducer"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAEhE,OAAO,MAAMC,kBAAkB,GAAGF,gBAAgB,CAC9C,4BAA4B,EAC5B,OAAOG,EAAE,EAAAC,IAAA,KAA0B;EAAA,IAAxB;IAAEC;EAAgB,CAAC,GAAAD,IAAA;EAC1B,IAAI;IACA,MAAME,IAAI,GAAG,MAAMC,KAAK,CAAE,kCAAiCJ,EAAG,EAAC,CAAC;IAChE,IAAI,CAACG,IAAI,CAACE,EAAE,EAAE;MACV,MAAM,IAAIC,KAAK,CAAC,gBAAgB,CAAC;IACrC;IACA,MAAMC,OAAO,GAAG,MAAMJ,IAAI,CAACK,IAAI,EAAE;IACjC,OAAOD,OAAO,CAAC,CAAC,CAAC;EACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZP,eAAe,CAACO,KAAK,CAACC,OAAO,CAAC;EAClC;AAEJ,CAAC,CACJ;AACD,OAAO,MAAMC,kBAAkB,GAAGb,WAAW,CAAC;EAC1Cc,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACVC,IAAI,EAAE,CAAC;EACX,CAAC;EACDC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAACnB,kBAAkB,CAACoB,OAAO,EAAGC,KAAK,IAAK;MAC5CA,KAAK,CAACC,MAAM,GAAG,SAAS;IAC5B,CAAC,CAAC,CACDH,OAAO,CAACnB,kBAAkB,CAACuB,SAAS,EAAE,CAACF,KAAK,EAAAG,KAAA,KAAkB;MAAA,IAAhB;QAAEC;MAAQ,CAAC,GAAAD,KAAA;MACtDH,KAAK,CAACN,IAAI,GAAGU,OAAO;MACpBJ,KAAK,CAACC,MAAM,GAAG,SAAS;IAC5B,CAAC,CAAC,CACDH,OAAO,CAACnB,kBAAkB,CAAC0B,QAAQ,EAAE,CAACL,KAAK,EAAAM,KAAA,KAAkB;MAAA,IAAhB;QAAEF;MAAQ,CAAC,GAAAE,KAAA;MACrDN,KAAK,CAACC,MAAM,GAAG,UAAU;MACzBD,KAAK,CAACX,KAAK,GAAGe,OAAO;IACzB,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,eAAeb,kBAAkB,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}