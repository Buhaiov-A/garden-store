{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nexport const fetchCategories = createAsyncThunk('caterories/fetchCategories', async (_, _ref) => {\n  let {\n    rejectWithValue\n  } = _ref;\n  try {\n    const response = await fetch('http://localhost:3333/categories/all');\n    if (!response.ok) {\n      throw new Error('Server problem');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nexport const categoriesSlice = createSlice({\n  name: 'caterories',\n  initialState: {\n    list: []\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchCategories.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchCategories.fulfilled, (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      state.list = payload;\n      state.status = 'resolve';\n    }).addCase(fetchCategories.rejected, (state, _ref3) => {\n      let {\n        payload\n      } = _ref3;\n      state.status = 'rejected';\n      state.error = payload;\n    });\n  }\n});\nexport default categoriesSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","fetchCategories","_","_ref","rejectWithValue","response","fetch","ok","Error","data","json","error","message","categoriesSlice","name","initialState","list","reducers","extraReducers","builder","addCase","pending","state","status","fulfilled","_ref2","payload","rejected","_ref3","reducer"],"sources":["/Users/user/Documents/garden-store/src/store/slices/cateroriesSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\nexport const fetchCategories = createAsyncThunk(\n    'caterories/fetchCategories',\n    async (_, { rejectWithValue }) => {\n        try {\n            const response = await fetch('http://localhost:3333/categories/all')\n            if (!response.ok) {\n                throw new Error('Server problem')\n            }\n            const data = await response.json()\n            return data\n        } catch (error) {\n            return rejectWithValue(error.message)\n        }\n\n    }\n)\n\nexport const categoriesSlice = createSlice({\n    name: 'caterories',\n    initialState: {\n        list: []\n    },\n    reducers: {},\n    extraReducers: (builder) => {\n        builder\n            .addCase(fetchCategories.pending, (state) => {\n                state.status = 'loading'\n            })\n            .addCase(fetchCategories.fulfilled, (state, { payload }) => {\n                state.list = payload\n                state.status = 'resolve'\n            })\n            .addCase(fetchCategories.rejected, (state, { payload }) => {\n                state.status = 'rejected'\n                state.error = payload\n            })\n    }\n})\n\n\nexport default categoriesSlice.reducer"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAEhE,OAAO,MAAMC,eAAe,GAAGF,gBAAgB,CAC3C,4BAA4B,EAC5B,OAAOG,CAAC,EAAAC,IAAA,KAA0B;EAAA,IAAxB;IAAEC;EAAgB,CAAC,GAAAD,IAAA;EACzB,IAAI;IACA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,CAAC;IACpE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,gBAAgB,CAAC;IACrC;IACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;IAClC,OAAOD,IAAI;EACf,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZ,OAAOP,eAAe,CAACO,KAAK,CAACC,OAAO,CAAC;EACzC;AAEJ,CAAC,CACJ;AAED,OAAO,MAAMC,eAAe,GAAGb,WAAW,CAAC;EACvCc,IAAI,EAAE,YAAY;EAClBC,YAAY,EAAE;IACVC,IAAI,EAAE;EACV,CAAC;EACDC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAACnB,eAAe,CAACoB,OAAO,EAAGC,KAAK,IAAK;MACzCA,KAAK,CAACC,MAAM,GAAG,SAAS;IAC5B,CAAC,CAAC,CACDH,OAAO,CAACnB,eAAe,CAACuB,SAAS,EAAE,CAACF,KAAK,EAAAG,KAAA,KAAkB;MAAA,IAAhB;QAAEC;MAAQ,CAAC,GAAAD,KAAA;MACnDH,KAAK,CAACN,IAAI,GAAGU,OAAO;MACpBJ,KAAK,CAACC,MAAM,GAAG,SAAS;IAC5B,CAAC,CAAC,CACDH,OAAO,CAACnB,eAAe,CAAC0B,QAAQ,EAAE,CAACL,KAAK,EAAAM,KAAA,KAAkB;MAAA,IAAhB;QAAEF;MAAQ,CAAC,GAAAE,KAAA;MAClDN,KAAK,CAACC,MAAM,GAAG,UAAU;MACzBD,KAAK,CAACX,KAAK,GAAGe,OAAO;IACzB,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAGF,eAAeb,eAAe,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}