{"ast":null,"code":"var _JSON$parse;\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nconst defaultState = (_JSON$parse = JSON.parse(localStorage.getItem('basket'))) !== null && _JSON$parse !== void 0 ? _JSON$parse : [];\nconst writeToLocalStorage = basket => localStorage.setItem('basket', JSON.stringify(basket));\nexport const fetchBasketOrder = createAsyncThunk('basket/fetchBasketOrder', async (order, _ref) => {\n  let {\n    rejectWithValue,\n    dispatch\n  } = _ref;\n  try {\n    const response = await fetch('http://localhost:3333/order/send', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(order)\n    });\n    if (!response.ok) {\n      throw new Error(`An error has occured: ${response.statusText}`);\n    }\n    const data = await response.json();\n    dispatch(clear());\n    return data;\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nexport const basketSlice = createSlice({\n  name: 'basket',\n  initialState: {\n    data: defaultState\n  },\n  reducers: {\n    addToBasket: (state, action) => {\n      const product = state.data.find(_ref2 => {\n        let {\n          id\n        } = _ref2;\n        return id === action.payload;\n      });\n      if (product) {\n        product.count++;\n      } else {\n        state.data.push({\n          id: action.payload,\n          count: 1\n        });\n      }\n      writeToLocalStorage(state.data);\n    },\n    increment: (state, action) => {\n      state.data.find(_ref3 => {\n        let {\n          id\n        } = _ref3;\n        return id === action.payload;\n      }).count++;\n      writeToLocalStorage(state.data);\n    },\n    decrement: (state, action) => {\n      const target = state.data.find(_ref4 => {\n        let {\n          id\n        } = _ref4;\n        return id === action.payload;\n      });\n      target.count--;\n      if (target.count === 0) {\n        state.data = state.data.filter(el => el !== target);\n      }\n      writeToLocalStorage(state.data);\n    },\n    remove: (state, action) => {\n      state.data = state.data.filter(_ref5 => {\n        let {\n          id\n        } = _ref5;\n        return id !== action.payload;\n      });\n      writeToLocalStorage(state.data);\n    },\n    clear: state => {\n      state.data = [];\n      writeToLocalStorage(state.data);\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchBasketOrder.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchBasketOrder.fulfilled, state => {\n      state.status = 'resolve';\n    }).addCase(fetchBasketOrder.rejected, (state, _ref6) => {\n      let {\n        payload\n      } = _ref6;\n      state.status = 'rejected';\n      state.error = payload;\n    });\n  }\n});\nexport const {\n  addToBasket,\n  increment,\n  decrement,\n  remove,\n  clear\n} = basketSlice.actions;\nexport default basketSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","defaultState","_JSON$parse","JSON","parse","localStorage","getItem","writeToLocalStorage","basket","setItem","stringify","fetchBasketOrder","order","_ref","rejectWithValue","dispatch","response","fetch","method","headers","body","ok","Error","statusText","data","json","clear","error","message","basketSlice","name","initialState","reducers","addToBasket","state","action","product","find","_ref2","id","payload","count","push","increment","_ref3","decrement","target","_ref4","filter","el","remove","_ref5","extraReducers","builder","addCase","pending","status","fulfilled","rejected","_ref6","actions","reducer"],"sources":["/Users/user/Documents/garden-store/src/store/slices/basketSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\nconst defaultState = JSON.parse(localStorage.getItem('basket')) ?? []\n\nconst writeToLocalStorage = (basket) => localStorage.setItem('basket', JSON.stringify(basket))\n\n\nexport const fetchBasketOrder = createAsyncThunk(\n    'basket/fetchBasketOrder',\n    async (order, { rejectWithValue, dispatch }) => {\n        try {\n            const response = await fetch('http://localhost:3333/order/send', {\n                method: 'POST',\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(order)\n            })\n            if (!response.ok) {\n                throw new Error(`An error has occured: ${response.statusText}`)\n            }\n            const data = await response.json()\n            dispatch(clear())\n            return data\n        } catch (error) {\n            return rejectWithValue(error.message)\n        }\n\n    }\n)\n\nexport const basketSlice = createSlice({\n    name: 'basket',\n    initialState: {\n        data: defaultState\n    },\n    reducers: {\n        addToBasket: (state, action) => {\n            const product = state.data.find(({ id }) => id === action.payload)\n            if (product) {\n                product.count++\n            } else {\n                state.data.push({ id: action.payload, count: 1 })\n            }\n            writeToLocalStorage(state.data)\n        },\n        increment: (state, action) => {\n            state.data.find(({ id }) => id === action.payload).count++\n            writeToLocalStorage(state.data)\n        },\n        decrement: (state, action) => {\n            const target = state.data.find(({ id }) => id === action.payload)\n            target.count--\n            if (target.count === 0) {\n                state.data = state.data.filter(el => el !== target)\n            }\n            writeToLocalStorage(state.data)\n        },\n        remove: (state, action) => {\n            state.data = state.data.filter(({ id }) => id !== action.payload)\n            writeToLocalStorage(state.data)\n        },\n        clear: (state) => {\n            state.data = []\n            writeToLocalStorage(state.data)\n        }\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(fetchBasketOrder.pending, (state) => {\n                state.status = 'loading'\n            })\n            .addCase(fetchBasketOrder.fulfilled, (state) => {\n                state.status = 'resolve'\n            })\n            .addCase(fetchBasketOrder.rejected, (state, { payload }) => {\n                state.status = 'rejected'\n                state.error = payload\n            })\n    }\n})\n\nexport const { addToBasket, increment, decrement, remove, clear } = basketSlice.actions\n\nexport default basketSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}